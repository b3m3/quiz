{"version":3,"file":"static/js/169.8498bae7.chunk.js","mappings":"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","sources":["webpack://quiz/./src/containers/quizPage/quiz-page.module.css?6d6a","containers/quizPage/QuizPage.jsx","utils/functions.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quiz\":\"quiz-page_quiz__Po-GW\"};","import { useState, useEffect, useContext, lazy, Suspense } from 'react';\r\n\r\nimport Loading from '../../components/loading/Loading';\r\n\r\nimport { getApiResource } from '../../service/getApiResource';\r\nimport { ROOT_QUIZ, QUESTIONS, LIMIT, DIFFICULTY, TAGS, CATEGORIES } from '../../constans/api';\r\nimport { Context } from '../../context/context';\r\nimport { stringToLink, removeSymbolInLink } from '../../utils/functions';\r\n\r\nimport style from './quiz-page.module.css';\r\n\r\nconst Header = lazy(() => import('../../components/header/Header'));\r\nconst Counter = lazy(() => import('../../components/counter/Counter'));\r\nconst Quiz = lazy(() => import('../../components/quiz/Quiz'));\r\n\r\nconst QuizPage = ({ setCurrentPage }) => {\r\n  const [errorApi, setErrorApi] = useState(false); \r\n  const [resultsQuestions, setResultsQuestions] = useState(null);\r\n  const [categories, setCategories] = useState(null);\r\n  const [numberOfQuestions, setNumberOfQuestions] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n  const {selectedCategories, selectedDifficulty, selectedTags, rangevalue, setRangeValue} = useContext(Context);\r\n    \r\n  useEffect(() => {\r\n    const url = \r\n      ROOT_QUIZ+\r\n      QUESTIONS+\r\n      (rangevalue === '1' ? LIMIT+'10' : LIMIT+rangevalue)+\r\n      (selectedCategories.length ? CATEGORIES+stringToLink(selectedCategories) : '')+\r\n      (selectedDifficulty !== \"Random\" && selectedDifficulty.length ? DIFFICULTY+selectedDifficulty.toLowerCase() : '')+\r\n      (selectedTags ? TAGS+stringToLink(selectedTags) : '');\r\n\r\n    (async() => {\r\n      const res = await getApiResource(removeSymbolInLink(url));\r\n\r\n      if (res.length) {\r\n        const {category, correctAnswer, difficulty, id, incorrectAnswers, question} = res[currentQuestion];\r\n\r\n        setResultsQuestions({ question, correctAnswer, incorrectAnswers, difficulty, id });\r\n        setCategories({ category });\r\n        setNumberOfQuestions(res.length);\r\n        setRangeValue(rangevalue === '1' ? '10' : rangevalue);\r\n      } else {\r\n        setErrorApi(true);\r\n      }\r\n    })()\r\n  }, [currentQuestion, selectedCategories, selectedDifficulty, selectedTags, rangevalue, setRangeValue]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={style.quiz}>\r\n        <Suspense fallback={<Loading />}>\r\n          <Header \r\n            title={categories}\r\n          />\r\n        </Suspense>\r\n        <Suspense fallback={<Loading />}>          \r\n          <Counter\r\n            guessedQuestions={currentQuestion}\r\n            totalQuestions={numberOfQuestions}\r\n          />\r\n        </Suspense>\r\n        {errorApi\r\n          ? <h2 \r\n              style={{textAlign: 'center', padding: '20px 0'}}\r\n            >\r\n              Please reload the page or change categories\r\n            </h2>\r\n          : <Suspense fallback={<Loading />}>\r\n              <Quiz \r\n                arrData={resultsQuestions}\r\n                currentQuestion={currentQuestion}\r\n                numberOfQuestions={numberOfQuestions}\r\n                setCurrentQuestion={setCurrentQuestion}\r\n                setCurrentPage={setCurrentPage}\r\n              />\r\n            </Suspense>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;","export const stringToLink = arr =>\r\n  arr.length\r\n    ? arr.map(el => \r\n        el\r\n          .toLowerCase()\r\n          .replace(\"&\", 'and')\r\n          .split(' ')\r\n          .join('_')\r\n      )\r\n        .join(',')\r\n    : null;\r\n\r\nexport const removeSymbolInLink = str => \r\n  str[41] === '&' ? str.slice(0, 41) + str.slice(42) : str;\r\n\r\nexport const shuffle = arr => \r\n  arr && arr.sort(() => Math.round(Math.random() * 100) - 50);\r\n"],"names":["Header","lazy","Counter","Quiz","setCurrentPage","useState","errorApi","setErrorApi","resultsQuestions","setResultsQuestions","categories","setCategories","numberOfQuestions","setNumberOfQuestions","currentQuestion","setCurrentQuestion","useContext","Context","selectedCategories","selectedDifficulty","selectedTags","rangevalue","setRangeValue","useEffect","url","ROOT_QUIZ","QUESTIONS","LIMIT","length","CATEGORIES","stringToLink","DIFFICULTY","toLowerCase","TAGS","getApiResource","removeSymbolInLink","res","category","correctAnswer","difficulty","id","incorrectAnswers","question","className","style","Suspense","fallback","Loading","title","guessedQuestions","totalQuestions","textAlign","padding","arrData","arr","map","el","replace","split","join","str","slice","shuffle","sort","Math","round","random"],"sourceRoot":""}